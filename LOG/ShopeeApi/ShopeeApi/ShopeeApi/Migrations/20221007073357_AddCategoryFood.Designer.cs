// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopeeApi.Datas;

#nullable disable

namespace ShopeeApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221007073357_AddCategoryFood")]
    partial class AddCategoryFood
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopeeApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CategoryTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("CategoryTag", "RestaurantId")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ShopeeApi.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"), 1L, 1);

                    b.Property<string>("FoodDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FoodPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<float>("FoodPriceLess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("FoodTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("FoodId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("ShopeeApi.Models.RelationCategoryFood", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "FoodId");

                    b.HasIndex("FoodId");

                    b.ToTable("RelationCategoryFoods");
                });

            modelBuilder.Entity("ShopeeApi.Models.Restaurant", b =>
                {
                    b.Property<int>("RsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RsId"), 1L, 1);

                    b.Property<string>("RsAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RsImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("RsOpenTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RsPrinceRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("RsPromotion")
                        .HasColumnType("int");

                    b.Property<string>("RsProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("RsRefeLike")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("RsReviews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<float>("RsStar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(1f);

                    b.Property<string>("RsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RsId");

                    b.HasIndex("RsTitle")
                        .IsUnique();

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("ShopeeApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShopeeApi.Models.Category", b =>
                {
                    b.HasOne("ShopeeApi.Models.Restaurant", "Restaurant")
                        .WithMany("Categories")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ShopeeApi.Models.Food", b =>
                {
                    b.HasOne("ShopeeApi.Models.Restaurant", "Restaurant")
                        .WithMany("Foods")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ShopeeApi.Models.RelationCategoryFood", b =>
                {
                    b.HasOne("ShopeeApi.Models.Category", "Category")
                        .WithMany("RelationCategoryFoods")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShopeeApi.Models.Food", "Food")
                        .WithMany("RelationCategoryFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("ShopeeApi.Models.Category", b =>
                {
                    b.Navigation("RelationCategoryFoods");
                });

            modelBuilder.Entity("ShopeeApi.Models.Food", b =>
                {
                    b.Navigation("RelationCategoryFoods");
                });

            modelBuilder.Entity("ShopeeApi.Models.Restaurant", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Foods");
                });
#pragma warning restore 612, 618
        }
    }
}
